<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.StudentMapper">
    <!--
        List<Student> selectById(Long id);
        List<Student> selectByName(String name);
        List<Student> selectByBirth(Date date);
        List<Student> selectBySex(Character sex);
    -->
    <!--
        parameterType属性的作用:
            高数mybatis,我在这个方法的参数类型是什么
            mybatis框架自带类型自动推断机制,所以大部分情况下可以不写这个属性

            Sql语句最终是这样的:
            select * from t_student where id = ?

            JDBC代码是一定要给?传值.
            怎么传值? ps.setXxx(第几个问好, 传什么值)
                ps.setString(1,"1");
                ps.setInt(1,1);

            mybatis实际上对java基本类型都内置了别名,参考开发手册
        -->
    <select id="selectById" resultType="Student" parameterType="java.lang.Long">
        select *
        from t_student
        where id = #{id};
    </select>
    <!--
        #{name, javaType=String, jdbcType=VARCHAR}同样是告诉mybatis参数的类型,不需要自动类型推断
    -->
    <select id="selectByName" resultType="Student">
        select *
        from t_student
        where `name` = #{name, javaType=String, jdbcType=VARCHAR};
    </select>

    <select id="selectByBirth" resultType="Student">
        select *
        from t_student
        where birth = #{birth};
    </select>

    <select id="selectBySex" resultType="Student">
        select *
        from t_student
        where sex = #{sex};
    </select>

    <insert id="insertStudentByMap">
        insert into t_student value (null,#{姓名},#{年龄},#{身高},#{生日},#{性别});
    </insert>

    <insert id="insertStudentByPojo">
        insert into t_student value (null,#{name},#{age},#{height},#{birth},#{sex});
    </insert>

    <!--
    注意
    低版本的mybatis中, 多参数使用的是: #{0}和#{1},以及{2}...
    高版本中,多参数则是
        #{arg0}
        #{arg1}
        #{param1}
        #{param2}
    -->
    <select id="selectByNameAndSex" resultType="Student">
        <!--select * from t_student where name = #{name} and sex = #{sex};-->
        select * from t_student where name = #{arg0} and sex = #{arg1}
    </select>

    <!---->
    <select id="selectByNameAndSex2" resultType="Student">
        <!--使用@Param注解后, arg0和arg1失效了-->
        <!--select * from t_student where name = #{arg0} and sex = #{arg1}-->

        <!--使用@Param注解后, param1和param2还可以用-->
        <!--select * from t_student where name = #{param1} and sex = #{param2}-->

        <!--使用注解后-->
        select * from t_student where name = #{name} and sex = #{sex}
    </select>
</mapper>